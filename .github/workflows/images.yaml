name: Images

on:
  push:
    branches: [ master, main, $default-branch ]

jobs:
  matrix:
    runs-on: ubuntu-20.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v1
      -
        id: set-matrix
        run: |
          matrix=$(
            find . -name 'Dockerfile' |
            sed -e"s|.*/\(.*\)/.*|\1|g" |
            jq -c --slurp --raw-input 'split("\n")[:-1] | {"otp": . }')
          echo "Matrix: $matrix"
          echo "::set-output name=matrix::$matrix"
      -
        name: Debug
        run: |
          echo ${{ steps.set-matrix.outputs.matrix }}

  images:
    needs: matrix
    runs-on: ubuntu-20.04
    strategy:
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}
      fail-fast: false
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: quay.io/travelping/alpine-erlang
          tags: |
            type=raw,value=${{ matrix.otp }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to QUAY
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./${{ matrix.otp }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
